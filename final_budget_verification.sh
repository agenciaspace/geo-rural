#!/bin/bash

# Script final para verificar se todos os or√ßamentos est√£o funcionando corretamente

# Configura√ß√µes do Supabase
SUPABASE_URL="https://lywwxzfnhzbdkxnblvcf.supabase.co"
SUPABASE_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx5d3d4emZuaHpiZGt4bmJsdmNmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDkxMjYxNTcsImV4cCI6MjA2NDcwMjE1N30.c91JJQ9yFPdjvMcH3VqrJWKu6dUSocrx0Ri9E1V8eDQ"

echo "‚úÖ VERIFICA√á√ÉO FINAL DOS OR√áAMENTOS"
echo "============================================================"

# 1. Verificar todos os or√ßamentos
echo ""
echo "1. VERIFICANDO TODOS OS OR√áAMENTOS..."
echo "-------------------------------------"

ALL_BUDGETS=$(curl -s \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" \
  -H "Content-Type: application/json" \
  "$SUPABASE_URL/rest/v1/budgets?select=id,client_name,total,total_price,budget_result&order=created_at.desc")

BUDGET_COUNT=$(echo "$ALL_BUDGETS" | jq length)
echo "üìä Total de or√ßamentos: $BUDGET_COUNT"

echo ""
echo "üìã ESTADO ATUAL DOS OR√áAMENTOS:"
echo "ID | Cliente | Total Price | Budget Result | Status"
echo "---|---------|-------------|---------------|-------"

CORRECT_COUNT=0
INCORRECT_COUNT=0

echo "$ALL_BUDGETS" | jq -r '.[] | @base64' | while read -r budget_encoded; do
    budget=$(echo "$budget_encoded" | base64 --decode)
    
    BUDGET_ID=$(echo "$budget" | jq -r '.id')
    CLIENT_NAME=$(echo "$budget" | jq -r '.client_name // "N/A"')
    TOTAL_PRICE=$(echo "$budget" | jq -r '.total_price // 0')
    BUDGET_RESULT_TOTAL=$(echo "$budget" | jq -r '.budget_result.total_price // 0')
    
    # Verificar se est√° correto (usar string comparison para evitar problemas com bc)
    STATUS="‚úÖ OK"
    if [ "$TOTAL_PRICE" != "$BUDGET_RESULT_TOTAL" ]; then
        STATUS="‚ùå ERRO"
    fi
    
    printf "%.8s | %-10s | %11s | %13s | %s\n" \
        "$BUDGET_ID" "$CLIENT_NAME" "R$ $TOTAL_PRICE" "R$ $BUDGET_RESULT_TOTAL" "$STATUS"
done

# 2. Verificar or√ßamento espec√≠fico
echo ""
echo "2. VERIFICANDO OR√áAMENTO ESPEC√çFICO..."
echo "--------------------------------------"

SPECIFIC_BUDGET="7c3c891a-e491-4412-918a-bd5a0ac558ae"
SPECIFIC_DATA=$(curl -s \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" \
  -H "Content-Type: application/json" \
  "$SUPABASE_URL/rest/v1/budgets?id=eq.$SPECIFIC_BUDGET&select=*")

if [ "$(echo "$SPECIFIC_DATA" | jq length)" -gt 0 ]; then
    CLIENT_NAME=$(echo "$SPECIFIC_DATA" | jq -r '.[0].client_name')
    TOTAL_PRICE=$(echo "$SPECIFIC_DATA" | jq -r '.[0].total_price')
    BUDGET_RESULT_TOTAL=$(echo "$SPECIFIC_DATA" | jq -r '.[0].budget_result.total_price')
    CUSTOM_LINK=$(echo "$SPECIFIC_DATA" | jq -r '.[0].custom_link')
    
    echo "üéØ Or√ßamento problem√°tico original:"
    echo "   ID: $SPECIFIC_BUDGET"
    echo "   Cliente: $CLIENT_NAME"
    echo "   Total Price: R$ $TOTAL_PRICE"
    echo "   Budget Result: R$ $BUDGET_RESULT_TOTAL"
    echo "   Link: $CUSTOM_LINK"
    
    if [ "$TOTAL_PRICE" = "$BUDGET_RESULT_TOTAL" ]; then
        echo "   ‚úÖ PROBLEMA RESOLVIDO!"
    else
        echo "   ‚ùå Ainda h√° inconsist√™ncia"
        
        # Tentar corre√ß√£o final
        echo "   üîß Aplicando corre√ß√£o final..."
        
        FINAL_FIX=$(curl -s \
          -X PATCH \
          -H "apikey: $SUPABASE_KEY" \
          -H "Authorization: Bearer $SUPABASE_KEY" \
          -H "Content-Type: application/json" \
          -H "Prefer: return=representation" \
          -d "{\"total_price\": $BUDGET_RESULT_TOTAL}" \
          "$SUPABASE_URL/rest/v1/budgets?id=eq.$SPECIFIC_BUDGET")
        
        if echo "$FINAL_FIX" | jq empty 2>/dev/null; then
            NEW_TOTAL=$(echo "$FINAL_FIX" | jq -r '.[0].total_price')
            echo "   ‚úÖ Corre√ß√£o aplicada: R$ $NEW_TOTAL"
        else
            echo "   ‚ùå Falha na corre√ß√£o"
        fi
    fi
fi

# 3. Verificar se h√° itens √≥rf√£os
echo ""
echo "3. VERIFICANDO ITENS √ìRF√ÉOS..."
echo "------------------------------"

ALL_ITEMS=$(curl -s \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" \
  -H "Content-Type: application/json" \
  "$SUPABASE_URL/rest/v1/budget_items?select=budget_id,description,total_price")

ITEMS_COUNT=$(echo "$ALL_ITEMS" | jq length)
echo "üìä Total de itens: $ITEMS_COUNT"

if [ "$ITEMS_COUNT" -gt 0 ]; then
    echo ""
    echo "üìã ITENS POR OR√áAMENTO:"
    echo "$ALL_ITEMS" | jq -r 'group_by(.budget_id) | .[] | "\(.[0].budget_id): \(length) itens, Total: R$ \([.[].total_price] | add)"'
else
    echo "‚ö†Ô∏è  Nenhum item encontrado - todos os or√ßamentos usam valores fixos"
fi

# 4. Testar URLs
echo ""
echo "4. URLS PARA TESTE..."
echo "--------------------"

if [ -n "$CUSTOM_LINK" ]; then
    echo "üåê URLs do or√ßamento espec√≠fico:"
    echo "   - Interno: http://localhost:8000/app/budgets/$SPECIFIC_BUDGET"
    echo "   - P√∫blico: http://localhost:8000/budget/$CUSTOM_LINK"
    echo ""
    echo "üîó Para testar, acesse as URLs acima e verifique se:"
    echo "   - O total exibido √© R$ $BUDGET_RESULT_TOTAL"
    echo "   - Os valores est√£o consistentes em todas as se√ß√µes"
    echo "   - Itens adicionados s√£o refletidos no total"
fi

# 5. Resumo das corre√ß√µes aplicadas
echo ""
echo "5. RESUMO DAS CORRE√á√ïES APLICADAS..."
echo "------------------------------------"

echo "‚úÖ CORRE√á√ïES IMPLEMENTADAS:"
echo ""
echo "üìä BACKEND:"
echo "   - Todos os or√ßamentos tiveram total_price sincronizado"
echo "   - Campo total_price agora reflete o valor correto"
echo "   - Or√ßamentos sem itens usam budget_result.total_price"
echo ""
echo "üé® FRONTEND:"
echo "   - BudgetDetails.js atualizado para usar calculateCorrectTotal()"
echo "   - BudgetHub.js atualizado para priorizar total_price"
echo "   - Fun√ß√£o calculateCorrectTotal() considera itens din√¢micos"
echo "   - Fallback para budget_result quando n√£o h√° itens"
echo ""
echo "üîß L√ìGICA DE C√ÅLCULO:"
echo "   - Se h√° itens: usa soma dos itens (din√¢mico)"
echo "   - Se n√£o h√° itens: usa budget_result.total_price (fixo)"
echo "   - Fallback para total_price e total em casos extremos"

# 6. Verifica√ß√£o final
echo ""
echo "6. VERIFICA√á√ÉO FINAL..."
echo "----------------------"

FINAL_VERIFICATION=$(curl -s \
  -H "apikey: $SUPABASE_KEY" \
  -H "Authorization: Bearer $SUPABASE_KEY" \
  -H "Content-Type: application/json" \
  "$SUPABASE_URL/rest/v1/budgets?select=id,total_price,budget_result&order=created_at.desc")

TOTAL_BUDGETS=$(echo "$FINAL_VERIFICATION" | jq length)
CORRECT_BUDGETS=$(echo "$FINAL_VERIFICATION" | jq '[.[] | select(.total_price == .budget_result.total_price)] | length')
INCORRECT_BUDGETS=$((TOTAL_BUDGETS - CORRECT_BUDGETS))

echo "üìä ESTAT√çSTICAS FINAIS:"
echo "   - Total de or√ßamentos: $TOTAL_BUDGETS"
echo "   - Or√ßamentos corretos: $CORRECT_BUDGETS"
echo "   - Or√ßamentos incorretos: $INCORRECT_BUDGETS"

if [ "$INCORRECT_BUDGETS" -eq 0 ]; then
    echo ""
    echo "üéâ TODOS OS OR√áAMENTOS EST√ÉO CORRETOS!"
    echo "‚úÖ PROBLEMA RESOLVIDO COM SUCESSO!"
else
    echo ""
    echo "‚ö†Ô∏è  Ainda h√° $INCORRECT_BUDGETS or√ßamento(s) com problemas"
    echo "üí° Pode ser necess√°rio investiga√ß√£o adicional"
fi

echo ""
echo "============================================================"
echo "üéØ PR√ìXIMOS PASSOS RECOMENDADOS:"
echo ""
echo "1. üåê TESTE MANUAL:"
echo "   - Acesse: http://localhost:8000/app/budgets/$SPECIFIC_BUDGET"
echo "   - Verifique se o total exibido √© R$ $BUDGET_RESULT_TOTAL"
echo "   - Teste adi√ß√£o/remo√ß√£o de itens"
echo ""
echo "2. üîÑ MONITORAMENTO:"
echo "   - Monitore novos or√ßamentos criados"
echo "   - Verifique se triggers funcionam para novos itens"
echo "   - Teste em diferentes cen√°rios"
echo ""
echo "3. üõ°Ô∏è PREVEN√á√ÉO:"
echo "   - Considere implementar valida√ß√£o no frontend"
echo "   - Adicione logs para debug de c√°lculos"
echo "   - Documente a l√≥gica de fallback"
echo "============================================================"
